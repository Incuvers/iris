---
version: 1
disable_existing_loggers: false
loggers:
  '':   # defines loggers that are unregistered
    level: 'ERROR'
    handlers: ['defaultHandler']
  monitor.environment:
    level: 'DEBUG'
    handlers: ['environmentHandler']
    propagate: false
  monitor.environment.thread_manager:
    level: 'DEBUG'
    handlers: ['threadHandler']
    propagate: false
  monitor.events:
    level: 'DEBUG'
    handlers: ['eventHandler']
    propagate: false
  monitor.cloud:
    level: 'DEBUG'
    handlers: ['mqttHandler']
    propagate: false
  AWSIoTPythonSDK:
    level: 'WARNING'
    handlers: ['mqttHandler']
    propagate: false
  monitor.api:
    level: 'DEBUG'
    handlers: ['apiHandler']
    propagate: false
  urllib3.connectionpool:
    level: 'INFO'
    handlers: ['apiHandler']
    propagate: false
  monitor.microscope:
    level: 'DEBUG'
    handlers: ['microscopeHandler']
    propagate: false
  monitor.arduino_link:
    level: 'INFO'
    handlers: ['arduinoHandler']
    propagate: false
  monitor.flash_service.flash_service:
    level: 'DEBUG'
    handlers: ['flashHandler']
    propagate: false
  werkzeug:
    level: 'INFO'
    handlers: ['wsgiHandler']
    propagate: false
  monitor.ui:
    level: 'DEBUG'
    handlers: ['uiHandler']
    propagate: false
  monitor.rotary_knob:
    level: 'INFO'
    handlers: ['rotaryHandler']
    propagate: false
  monitor.sys:
    level: 'DEBUG'
    handlers: ['systemHandler']
    propagate: false
  monitor.sys.benchmark:
    level: 'DEBUG'
    handlers: ['benchmarkHandler']
    propagate: false
  monitor.imaging:
    level: 'DEBUG'
    handlers: ['imagingHandler']
    propagate: false
  monitor.protocol:
    level: 'DEBUG'
    handlers: ['protocolHandler']
    propagate: false
  monitor.scheduler:
    level: 'DEBUG'
    handlers: ['schedulerHandler']
    propagate: false
  monitor.cache:
    level: 'DEBUG'
    handlers: ['cacheHandler']
    propagate: false

handlers:
  defaultHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'unregistered'
    formatter: 'aws'
    boto3_session: boto3_session
  systemHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'system'
    formatter: 'aws'
    boto3_session: boto3_session
  environmentHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'environment'
    formatter: 'aws'
    boto3_session: boto3_session
  threadHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'threading'
    formatter: 'aws'
    boto3_session: boto3_session
  eventHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'event'
    formatter: 'aws'
    boto3_session: boto3_session
  mqttHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'mqtt'
    formatter: 'aws'
    boto3_session: boto3_session
  microscopeHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'microscope'
    formatter: 'aws'
    boto3_session: boto3_session
  arduinoHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'arduino'
    formatter: 'aws'
    boto3_session: boto3_session
  imagingHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'imaging'
    formatter: 'aws'
    boto3_session: boto3_session
  protocolHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'protocol'
    formatter: 'aws'
    boto3_session: boto3_session
  awsHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'aws'
    formatter: 'aws'
    boto3_session: boto3_session
  apiHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'api'
    formatter: 'aws'
    boto3_session: boto3_session
  flashHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'flash'
    formatter: 'aws'
    boto3_session: boto3_session
  wsgiHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'wsgi'
    formatter: 'aws'
    boto3_session: boto3_session
  uiHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'ui'
    formatter: 'aws'
    boto3_session: boto3_session
  rotaryHandler:
    level: 'INFO'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'rotary'
    formatter: 'aws'
    boto3_session: boto3_session
  benchmarkHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'benchmark'
    formatter: 'aws'
    boto3_session: boto3_session
  schedulerHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'scheduler'
    formatter: 'aws'
    boto3_session: boto3_session
  cacheHandler:
    level: 'DEBUG'
    class: 'watchtower.CloudWatchLogHandler'
    log_group: /iris/${ID}
    stream_name: 'cache'
    formatter: 'aws'
    boto3_session: boto3_session

formatters:   # more commment
  default:
    format: '%(asctime)s %(name)s line:%(lineno)d - %(levelname)s: %(message)s'
  aws:
    datefmt: "%Y-%m-%d %H:%M:%S"
    format: "[ %(asctime)s | %(threadName)s | %(levelname)-8s | %(funcName)s | line:%(lineno)d ] %(message)s"
